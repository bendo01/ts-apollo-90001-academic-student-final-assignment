type AcademicStudentFinalAssignmentTransactionSchedule {
    id: ID!,
    schedule_date: Date!,
    schedule_time: Time!,
    submission_id: uuid!,
    created_by: uuid,
    modified_by: uuid,
    created_at: DateTime,
    updated_at: DateTime,
    deleted_at: DateTime
}

input AcademicStudentFinalAssignmentTransactionScheduleInput {
    schedule_date: Date!,
    schedule_time: Time!,
    submission_id: uuid!,
}

type AcademicStudentFinalAssignmentTransactionSchedulePaginate {
    pagination: AcademicStudentFinalAssignmentPaginate
    data: [AcademicStudentFinalAssignmentTransactionSchedule],
}

type Query {
    academic_student_final_assignment_transaction_schedule_paginate(page: Int, per_page: Int, sort: String, order: String, filter: String, search: String): AcademicStudentFinalAssignmentTransactionSchedulePaginate
    academic_student_final_assignment_transaction_schedule(id: ID!): AcademicStudentFinalAssignmentTransactionSchedule
}

type Mutation {
    create_academic_student_final_assignment_transaction_schedule(data: AcademicStudentFinalAssignmentTransactionScheduleInput): AcademicStudentFinalAssignmentTransactionSchedule
    update_academic_student_final_assignment_transaction_schedule(id: ID!, data: AcademicStudentFinalAssignmentTransactionScheduleInput): AcademicStudentFinalAssignmentTransactionSchedule
    delete_academic_student_final_assignment_transaction_schedule(id: ID!): AcademicStudentFinalAssignmentTransactionSchedule
}
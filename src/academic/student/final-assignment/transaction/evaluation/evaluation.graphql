type AcademicStudentFinalAssignmentTransactionEvaluation {
    id: ID!,
    thread: Int!,
    adviser_id: uuid!,
    schedule_id: uuid!,
    type_id: uuid!,
    grade: Float,
    created_by: uuid,
    modified_by: uuid,
    created_at: DateTime,
    updated_at: DateTime,
    deleted_at: DateTime
}

type AcademicStudentFinalAssignmentTransactionEvaluationPaginate {
    pagination: AcademicStudentFinalAssignmentPaginate
    data: [AcademicStudentFinalAssignmentTransactionEvaluation],
}

type Query {
    academic_student_final_assignment_transaction_evaluation_paginate(page: Int, per_page: Int, sort: String, order: String, filter: String, search: String): AcademicStudentFinalAssignmentTransactionEvaluationPaginate
    academic_student_final_assignment_transaction_evaluation(id: ID!): AcademicStudentFinalAssignmentTransactionEvaluation
}


type Mutation {
    create_academic_student_final_assignment_transaction_evaluation(data: PersonReferenceInput): AcademicStudentFinalAssignmentTransactionEvaluation
    update_academic_student_final_assignment_transaction_evaluation(id: ID!, data: PersonReferenceInput): AcademicStudentFinalAssignmentTransactionEvaluation
    delete_academic_student_final_assignment_transaction_evaluation(id: ID!): AcademicStudentFinalAssignmentTransactionEvaluation
}
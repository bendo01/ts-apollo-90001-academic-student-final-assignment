type AcademicStudentFinalAssignmentTransactionApproval {
    id: ID!,
    prerequisite_id: uuid!,
    inspector_id: uuid!,
    type_id: uuid!,
    approve_type_id: uuid!,
    created_by: uuid,
    modified_by: uuid,
    created_at: DateTime,
    updated_at: DateTime,
    deleted_at: DateTime
}

input AcademicStudentFinalAssignmentTransactionApprovalInput {
    prerequisite_id: uuid!,
    inspector_id: uuid!,
    type_id: uuid!,
    approve_type_id: uuid!,
}

type AcademicStudentFinalAssignmentTransactionApprovalPaginate {
    pagination: AcademicStudentFinalAssignmentPaginate
    data: [AcademicStudentFinalAssignmentTransactionApproval],
}

type Query {
    academic_student_final_assignment_transaction_approval_paginate(page: Int, per_page: Int, sort: String, order: String, filter: String, search: String): AcademicStudentFinalAssignmentTransactionApprovalPaginate
    academic_student_final_assignment_transaction_approval(id: ID!): AcademicStudentFinalAssignmentTransactionApproval
}


type Mutation {
    create_academic_student_final_assignment_transaction_approval(data: AcademicStudentFinalAssignmentTransactionApprovalInput): AcademicStudentFinalAssignmentTransactionApproval
    update_academic_student_final_assignment_transaction_approval(id: ID!, data: AcademicStudentFinalAssignmentTransactionApprovalInput): AcademicStudentFinalAssignmentTransactionApproval
    delete_academic_student_final_assignment_transaction_approval(id: ID!): AcademicStudentFinalAssignmentTransactionApproval
}